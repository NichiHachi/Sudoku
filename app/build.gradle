/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // Logger
    implementation libs.slf4j.api
    implementation libs.logback.classic
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

javadoc {
    source = sourceSets.main.allJava
    options.memberLevel = JavadocMemberLevel.PRIVATE // includes private members
    options.encoding = 'UTF-8'
    destinationDir = file("./docs/javadoc") 
}

application {
    // Define the main class for the application.
    mainClass = 'sudoku.Main'
}

run {
    standardInput = System.in
    // Add logging level support
    systemProperty "LOG_LEVEL", System.getProperty("LOG_LEVEL", "WARN")
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task runGraphic(type: JavaExec) {
    group = "application"
    description = "Runs the graphics application"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'sudoku.graphic.MainGraphic'
    systemProperty "LOG_LEVEL", System.getProperty("LOG_LEVEL", "WARN")
}

task runTerminal(type: JavaExec) {
    group = "application"
    description = "Runs the terminal application"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'sudoku.terminal.MainTerminal'
    standardInput = System.in
    systemProperty "LOG_LEVEL", System.getProperty("LOG_LEVEL", "WARN")
}
